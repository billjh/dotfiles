# zsh plugins
source /opt/homebrew/share/zsh-autosuggestions/zsh-autosuggestions.zsh
source /opt/homebrew/share/zsh-syntax-highlighting/zsh-syntax-highlighting.zsh
source /opt/homebrew/share/zsh-history-substring-search/zsh-history-substring-search.zsh
bindkey '^[[A' history-substring-search-up
bindkey '^[[B' history-substring-search-down

autoload -Uz compinit && compinit

# alias
alias g="lazygit"
alias ls="eza --icons --hyperlink --octal-permissions --git-repos --all"
alias ll="ls --long"
alias ..="cd .."

# go bins
if command -v go >/dev/null 2>&1; then
    export PATH=$PATH:$(go env GOPATH)/bin
fi

# direnv hook
if command -v direnv >/dev/null 2>&1; then
    eval "$(direnv hook zsh)"
fi

# pyenv and pyenv-virtualenv
if command -v pyenv >/dev/null 2>&1; then
    export PYENV_ROOT="$HOME/.pyenv"
    export PATH="$PYENV_ROOT/bin:$PATH"
    eval "$(pyenv init -)"
    eval "$(pyenv virtualenv-init -)"
fi

# nvm
export NVM_DIR="$HOME/.nvm"
[ -s "$NVM_DIR/nvm.sh" ] && \. "$NVM_DIR/nvm.sh"  # This loads nvm
[ -s "$NVM_DIR/bash_completion" ] && \. "$NVM_DIR/bash_completion"  # This loads nvm bash_completion
# nvm: automatic loading of .nvmrc
autoload -U add-zsh-hook
load-nvmrc() {
  local nvmrc_path
  nvmrc_path="$(nvm_find_nvmrc)"

  if [ -n "$nvmrc_path" ]; then
    local nvmrc_node_version
    nvmrc_node_version=$(nvm version "$(cat "${nvmrc_path}")")

    if [ "$nvmrc_node_version" = "N/A" ]; then
      nvm install
    elif [ "$nvmrc_node_version" != "$(nvm version)" ]; then
      nvm use
    fi
  elif [ -n "$(PWD=$OLDPWD nvm_find_nvmrc)" ] && [ "$(nvm version)" != "$(nvm version default)" ]; then
    echo "Reverting to nvm default version"
    nvm use default
  fi
}
add-zsh-hook chpwd load-nvmrc
load-nvmrc

# [zendesk] kubeconfig
if [ -f ~/Code/zendesk/kubectl_config/dotfiles/kubectl_stuff.bash ]; then
  source ~/Code/zendesk/kubectl_config/dotfiles/kubectl_stuff.bash
fi

# [zendesk] scooter
if [ -f ~/Code/zendesk/scooter/scripts/shell/scooter.sh ]; then
  source ~/Code/zendesk/scooter/scripts/shell/scooter.sh
  export SCOOTER_KUBERNETES_CONTEXT=scooter-apse2
fi

# starship prompt
eval "$(starship init zsh)"
